version: '3'

services:
  caddy:
    depends_on:
      - auth
    image: caddy:alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '5000:5000'
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app_network

  #DB
  postgresql:
    image: postgres:latest
    container_name: PosgreSQL
    restart: always
    environment:
      - POSTGRES_USER=sazzad
      - POSTGRES_PASSWORD=sazzad14
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - app_network

  web:
    container_name: web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    restart: always
    ports:
      - '3000'
    networks:
      - app_network
  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
    restart: always
    ports:
      - '5001'
    environment:
      NODE_ENV: production
    networks:
      - app_network

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  app_network:
    name: app_network
    external: true

volumes:
  db:
  caddy_data:
  caddy_config:
